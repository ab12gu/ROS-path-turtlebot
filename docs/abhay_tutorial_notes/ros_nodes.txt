Install lightweigh simulator:
sudo apt-get install ros-melodic-ros-tutorials

Graph Concepts:
- Nodes: A node is an executable that uses ROS to communicate w/ other nodes
- Messages: ROS data type used when subscribing or publishing to a topic
- Topics: Nodes can publish messages to a topic as well as subscribe to a topic to receive messages
- Master: Name service for ROS (i.e. helps nodes find each other)
- rosout: ROS equivelent to stdout/stderr
- roscore: Master + rosout + paramter server

Nodes: executable file within a ROS package. 
- ROS nodes use a ROS client library to communicate with other nodes. 
- Nodes can publish or subscribe to a Topic.
- Nodes can also provide or use a service.

Client Libraries: ROS client libraries allow nodes written in different programming languages to commicate:
- rospy = python client library
- roscpp = c++ client library

roscore: first thing you should run when using ROS
$ roscore
- collection of nodes and programs that a pre-requs for ROS-based system
- Allows for ROS nodes to communcate

Note: now you need new terminal :(
$ rosnode list
returns: /rosout (only one node is running... rosout... used to collect log nodes' debugging output)
$ rosnode info /rosout

Rosrun: allows you to use package name to directly run a node within a package (without having to know the package path)
$ rosrun [package_name] [node_name]
$ rosrun turtlesim turtlesim_node #turtle image varies on each run
$ rosrun turtlesim turtlesim_node __name:= gupta_bot #can rename node during run
- to close node: close window and then ctrl c

To clean rosnode list: 
$ rosnode cleanup

Ping a node:
$ rosnode ping my_turtle

Summary:
roscore = ros+core : master (provides name service for ROS) + rosout (stdout/stderr) + parameter server (parameter server will be introduced later)
rosnode = ros+node : ROS tool to get information about a node.
rosrun = ros+run : runs a node from a given package.
