Python client for ROS (rospy)
"Node" is the ROS term for an executable that is connected to the ROS network. 

Writing a publisher node: 
Here we'll create the publisher ("talker") node which will continually broadcast a message.

Change directory to beginner_tutorials package
$ roscd beginner_tutorials

Create a scripts folder:
$ mkdir scripts
$ cd scripts

Download talker script and make it executable
$ wget https://raw.github.com/ros/ros_tutorials/kinetic-devel/rospy_tutorials/001_talker_listener/talker.py
$ chmod +x talker.py

Writing a subscriber node:
$ roscd beginner_tutorials/scripts/
$ wget https://raw.github.com/ros/ros_tutorials/kinetic-devel/rospy_tutorials/001_talker_listener/listener.py
$ chmod +x listener.py

Build the Nodes:
We use CMake as our build system and, yes, you have to use it even for Python nodes. This is to make sure that the autogenerated Python code for messages and services is created.
$ cd ~/catkin_ws
$ catkin_make

Running the Nodes: 
Running nodes requires you have a ROS core started. A ROS core is a collection of nodes and programs that are pre-requisites of a ROS-based system. You must have a roscore running in order for ROS nodes to communicate. Open a new shell, and type:
$ roscore

Now, run the talker:
$ rosrun beginner_tutorials talker.py

Now, run the listener: 
$ rosrun beginner_tutorials listener.py
Alternative: 
$ python listener.py



